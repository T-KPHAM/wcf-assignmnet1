//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculatorClient.CalculatorReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculatorReference.IFiveMethodService")]
    public interface IFiveMethodService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFiveMethodService/IsPrime", ReplyAction="http://tempuri.org/IFiveMethodService/IsPrimeResponse")]
        bool IsPrime(int primeNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFiveMethodService/IsPrime", ReplyAction="http://tempuri.org/IFiveMethodService/IsPrimeResponse")]
        System.Threading.Tasks.Task<bool> IsPrimeAsync(int primeNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFiveMethodService/SumOfDigits", ReplyAction="http://tempuri.org/IFiveMethodService/SumOfDigitsResponse")]
        int SumOfDigits(int sumNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFiveMethodService/SumOfDigits", ReplyAction="http://tempuri.org/IFiveMethodService/SumOfDigitsResponse")]
        System.Threading.Tasks.Task<int> SumOfDigitsAsync(int sumNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFiveMethodService/Reverse", ReplyAction="http://tempuri.org/IFiveMethodService/ReverseResponse")]
        string Reverse(string sReverse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFiveMethodService/Reverse", ReplyAction="http://tempuri.org/IFiveMethodService/ReverseResponse")]
        System.Threading.Tasks.Task<string> ReverseAsync(string sReverse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFiveMethodService/HTMLTag", ReplyAction="http://tempuri.org/IFiveMethodService/HTMLTagResponse")]
        string HTMLTag(string tag, string txt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFiveMethodService/HTMLTag", ReplyAction="http://tempuri.org/IFiveMethodService/HTMLTagResponse")]
        System.Threading.Tasks.Task<string> HTMLTagAsync(string tag, string txt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFiveMethodService/SortNumbers", ReplyAction="http://tempuri.org/IFiveMethodService/SortNumbersResponse")]
        string SortNumbers(string sortType, int num1, int num2, int num3, int num4, int num5);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFiveMethodService/SortNumbers", ReplyAction="http://tempuri.org/IFiveMethodService/SortNumbersResponse")]
        System.Threading.Tasks.Task<string> SortNumbersAsync(string sortType, int num1, int num2, int num3, int num4, int num5);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFiveMethodServiceChannel : CalculatorClient.CalculatorReference.IFiveMethodService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FiveMethodServiceClient : System.ServiceModel.ClientBase<CalculatorClient.CalculatorReference.IFiveMethodService>, CalculatorClient.CalculatorReference.IFiveMethodService {
        
        public FiveMethodServiceClient() {
        }
        
        public FiveMethodServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FiveMethodServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FiveMethodServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FiveMethodServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsPrime(int primeNumber) {
            return base.Channel.IsPrime(primeNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsPrimeAsync(int primeNumber) {
            return base.Channel.IsPrimeAsync(primeNumber);
        }
        
        public int SumOfDigits(int sumNumber) {
            return base.Channel.SumOfDigits(sumNumber);
        }
        
        public System.Threading.Tasks.Task<int> SumOfDigitsAsync(int sumNumber) {
            return base.Channel.SumOfDigitsAsync(sumNumber);
        }
        
        public string Reverse(string sReverse) {
            return base.Channel.Reverse(sReverse);
        }
        
        public System.Threading.Tasks.Task<string> ReverseAsync(string sReverse) {
            return base.Channel.ReverseAsync(sReverse);
        }
        
        public string HTMLTag(string tag, string txt) {
            return base.Channel.HTMLTag(tag, txt);
        }
        
        public System.Threading.Tasks.Task<string> HTMLTagAsync(string tag, string txt) {
            return base.Channel.HTMLTagAsync(tag, txt);
        }
        
        public string SortNumbers(string sortType, int num1, int num2, int num3, int num4, int num5) {
            return base.Channel.SortNumbers(sortType, num1, num2, num3, num4, num5);
        }
        
        public System.Threading.Tasks.Task<string> SortNumbersAsync(string sortType, int num1, int num2, int num3, int num4, int num5) {
            return base.Channel.SortNumbersAsync(sortType, num1, num2, num3, num4, num5);
        }
    }
}
